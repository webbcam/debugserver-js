.. _session:

Session commands are sent over a socket connected to the respective session port
(received when :ref:`opening a session<api:opensession>`)

.. important::
    You must first :ref:`open a session<api:opensession>` on the DebugServer
    and connect to it over a socket before sending any session commands.

.. contents:: Command List:
    :local:
    :backlinks: top

----

connect
-------

Connect to the target

+----------------+---------------+----------------------------------+
| **Request**                                                       |
+================+===============+==================================+
| **Key**        | **Value**     | **Description**                  |
+----------------+---------------+----------------------------------+
| "name"         | "connect"     | \-                               |
+----------------+---------------+----------------------------------+
| "args"         | \-            | \-                               |
+----------------+---------------+----------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "connect"
    }

disconnect
----------

Disconnect from the target

+----------------+---------------+----------------------------------+
| **Request**                                                       |
+================+===============+==================================+
| **Key**        | **Value**     | **Description**                  |
+----------------+---------------+----------------------------------+
| "name"         | "disconnect"  | \-                               |
+----------------+---------------+----------------------------------+
| "args"         | \-            | \-                               |
+----------------+---------------+----------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "disconnect"
    }

erase
-----

Erases flash on target (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+----------------------------------+
| **Request**                                                       |
+================+===============+==================================+
| **Key**        | **Value**     | **Description**                  |
+----------------+---------------+----------------------------------+
| "name"         | "erase"       | \-                               |
+----------------+---------------+----------------------------------+
| "args"         | \-            | \-                               |
+----------------+---------------+----------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "erase"
    }

reset
-----

Resets device (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+----------------------------------+
| **Request**                                                       |
+================+===============+==================================+
| **Key**        | **Value**     | **Description**                  |
+----------------+---------------+----------------------------------+
| "name"         | "reset"       | \-                               |
+----------------+---------------+----------------------------------+
| "args"         | \-            | \-                               |
+----------------+---------------+----------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "reset"
    }

load
-----

Loads file into device's flash (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+----------------------------------------------------+
| **Request**                                                                         |
+================+===============+====================================================+
| **Key**        | **Value**     | **Description**                                    |
+----------------+---------------+----------------------------------------------------+
| "name"         | "load"        | \-                                                 |
+----------------+---------------+----------------------------------------------------+
| "args"         | "file"        | Path to file to load                               |
|                +---------------+----------------------------------------------------+
|                | "binary"      | Load image as binary (optional; default=false)     |
|                +---------------+----------------------------------------------------+
|                | "address"     | Address location to load binary image (optional)   |
+----------------+---------------+----------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "load",
        "args": {
            "file": "/path/to/image.hex"
        }
    }

    //  Request (binary)
    {
        "name": "load",
        "args": {
            "file": "/path/to/image.bin",
            "binary": true,
            "address": 0x10000000
        }
    }

verify
------

Verifies a file in device's memory (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+----------------------------------------------------+
| **Request**                                                                         |
+================+===============+====================================================+
| **Key**        | **Value**     | **Description**                                    |
+----------------+---------------+----------------------------------------------------+
| "name"         | "verify"      | \-                                                 |
+----------------+---------------+----------------------------------------------------+
| "args"         | "file"        | Path to file to verify"                            |
|                +---------------+----------------------------------------------------+
|                | "binary"      | Verify image as binary (optional; default=false)   |
|                +---------------+----------------------------------------------------+
|                | "address"     | Address location to verify binary image (optional) |
+----------------+---------------+----------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "verify",
        "args": {
            "file": "/path/to/image.hex"
        }
    }

    //  Request (binary)
    {
        "name": "verify",
        "args": {
            "file": "/path/to/image.bin",
            "binary": true,
            "address": 0x10000000
        }
    }

evaluate
--------

Evaluates an expression (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+-------------------------------------------------------+
| **Request**                                                                            |
+================+===============+=======================================================+
| **Key**        | **Value**     | **Description**                                       |
+----------------+---------------+-------------------------------------------------------+
| "name"         | "evaluate"    | \-                                                    |
+----------------+---------------+-------------------------------------------------------+
| "args"         | "expression"  | Expression to evaluate                                |
|                +---------------+-------------------------------------------------------+
|                | "file"        | Path to symbols (.out) file to load first (optional)  |
+----------------+---------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request (with symbols)
    {
        "name": "evaluate",
        "args": {
            "expression": "&Sensor_msgStats",
            "file": "/path/to/symbols.out",
        }
    }


    //  Response
    {
        "status": "OK",
        "data": 51234234
    }

readData
--------

Read memory from device (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+-------------------------------------------------------+
| **Request**                                                                            |
+================+===============+=======================================================+
| **Key**        | **Value**     | **Description**                                       |
+----------------+---------------+-------------------------------------------------------+
| "name"         | "readData"    | \-                                                    |
+----------------+---------------+-------------------------------------------------------+
| "args"         | "page"        | Page number to read address from                      |
|                +---------------+-------------------------------------------------------+
|                | "address"     | Address to read memory from                           |
|                +---------------+-------------------------------------------------------+
|                | "numBytes"    | Number of bytes to read starting at 'address'         |
+----------------+---------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "readData",
        "args": {
            "page": 0,
            "address": 0x20000000,
            "numBytes": 4
        }
    }


    //  Response
    {
        "status": "OK",
        "data": [0xFF, 0xFF, 0xFF, 0xFF]
    }

writeData
---------

Write to memory on device (must be :ref:`connected<api:connect>` to device)

+----------------+---------------+-------------------------------------------------------+
| **Request**                                                                            |
+================+===============+=======================================================+
| **Key**        | **Value**     | **Description**                                       |
+----------------+---------------+-------------------------------------------------------+
| "name"         | "writeData"   | \-                                                    |
+----------------+---------------+-------------------------------------------------------+
| "args"         | "page"        | Page number of address to write to                    |
|                +---------------+-------------------------------------------------------+
|                | "address"     | Memory address to write to                            |
|                +---------------+-------------------------------------------------------+
|                | "data"        | Byte or bytes to write to memory at 'address'         |
+----------------+---------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "writeData",
        "args": {
            "page": 0,
            "address": 0x20000000,
            "data": [0xFF, 0xFF]
        }
    }


    //  Response
    {
        "status": "OK"
    }

readRegister
------------

Read device register (must be :ref:`connected<api:connect>` to device)

+----------------+-----------------+-------------------------------------------------------+
| **Request**                                                                              |
+================+=================+=======================================================+
| **Key**        | **Value**       | **Description**                                       |
+----------------+-----------------+-------------------------------------------------------+
| "name"         | "readRegister"  | \-                                                    |
+----------------+-----------------+-------------------------------------------------------+
| "args"         | "name"          | Name of register to read from                         |
+----------------+-----------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "readRegister",
        "args": {
            "name": "R1"
        }
    }


    //  Response
    {
        "status": "OK",
        "data": 0xFFFF
    }

writeRegister
-------------

Write to device's register (must be :ref:`connected<api:connect>` to device)

+----------------+-----------------+-------------------------------------------------------+
| **Request**                                                                              |
+================+=================+=======================================================+
| **Key**        | **Value**       | **Description**                                       |
+----------------+-----------------+-------------------------------------------------------+
| "name"         | "writeRegister" | \-                                                    |
+----------------+-----------------+-------------------------------------------------------+
| "args"         | "name"          | Name of register to write to                          |
|                +-----------------+-------------------------------------------------------+
|                | "value"         | Value to write to register                            |
+----------------+-----------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "writeRegister",
        "args": {
            "name": "R1",
            "value": 0xBEEF
        }
    }


    //  Response
    {
        "status": "OK"
    }

getOption
---------

Get the value of a device option (must be :ref:`connected<api:connect>` to device)

+----------------+-----------------+-------------------------------------------------------+
| **Request**                                                                              |
+================+=================+=======================================================+
| **Key**        | **Value**       | **Description**                                       |
+----------------+-----------------+-------------------------------------------------------+
| "name"         | "getOption"     | \-                                                    |
+----------------+-----------------+-------------------------------------------------------+
| "args"         | "id"            | option ID                                             |
+----------------+-----------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "getOption",
        "args": {
            "id": "DeviceInfoRevision"
        }
    }


    //  Response
    {
        "status": "OK",
        "data": "2.1"
    }

setOption
---------

Set the value of a device option (must be :ref:`connected<api:connect>` to device)

+----------------+-----------------+-------------------------------------------------------+
| **Request**                                                                              |
+================+=================+=======================================================+
| **Key**        | **Value**       | **Description**                                       |
+----------------+-----------------+-------------------------------------------------------+
| "name"         | "setOption"     | \-                                                    |
+----------------+-----------------+-------------------------------------------------------+
| "args"         | "id"            | option ID                                             |
|                +-----------------+-------------------------------------------------------+
|                | "value"         | Value to set option to                                |
+----------------+-----------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "setOption",
        "args": {
            "id": "ResetOnRestart",
            "value": True
        }
    }


    //  Response
    {
        "status": "OK"
    }

performOperation
----------------

Perform flash operation (must be :ref:`connected<api:connect>` to device)

+----------------+-------------------------+-------------------------------------------------------+
| **Request**                                                                                      |
+================+=========================+=======================================================+
| **Key**        | **Value**               | **Description**                                       |
+----------------+-------------------------+-------------------------------------------------------+
| "name"         | "performOperation"      | \-                                                    |
+----------------+-------------------------+-------------------------------------------------------+
| "args"         | "opcode"                | operation code for flash operation                    |
+----------------+-------------------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "performOperation",
        "args": {
            "opcode": "Erase",
        }
    }


    //  Response
    {
        "status": "OK"
    }

run
---

Issue run command to target device

+-------------+----------------+----------------------------------------------------+
| **Request** |                |                                                    |
+=============+================+====================================================+
| **Key**     | **Value**      | **Description**                                    |
+-------------+----------------+----------------------------------------------------+
| "name"      | "run"          | \-                                                 |
+-------------+----------------+----------------------------------------------------+
| "args"      | "asynchronous" | run and return control immediately (default=False) |
+-------------+----------------+----------------------------------------------------+

.. warning::
    If "async" is set to **False**, this function will not return until one of the
    following occur:

      - target is halted due to hitting a breakpoint
      - target hits end of program
      - timeout

.. code-block:: javascript

    //  Request
    {
        "name": "run",
        "args": {
            "async": True
        }
    }

halt
----

Issue halt command to target device

+----------------+---------------+-------------------------------------------------------+
| **Request**                                                                            |
+================+===============+=======================================================+
| **Key**        | **Value**     | **Description**                                       |
+----------------+---------------+-------------------------------------------------------+
| "name"         | "halt"        | \-                                                    |
+----------------+---------------+-------------------------------------------------------+
| "args"         | "wait"        | wait until device is actually halted before returning |
+----------------+---------------+-------------------------------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "halt",
        "args": {
            "wait": True
        }
    }

stop
----

Stop the session thread (does not :ref:`terminate session<api:terminatesession>`)

+----------------+---------------+----------------------------------+
| **Request**                                                       |
+================+===============+==================================+
| **Key**        | **Value**     | **Description**                  |
+----------------+---------------+----------------------------------+
| "name"         | "stop"        | \-                               |
+----------------+---------------+----------------------------------+
| "args"         | \-            | \-                               |
+----------------+---------------+----------------------------------+

.. code-block:: javascript

    //  Request
    {
        "name": "stop"
    }

